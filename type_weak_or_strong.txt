C 的类型系统，是显式指明变量的类型的。任意一个变量的定义，需要将类型名放在声明处。例如 int x; 这样。

而像 Python 一样的语言，一个变量的类型是由其值确定的。x = 3 之后会让 x 是一个 int 类型，但这只是表示目前的状况，下一步 x = 'a' 则让 x 变成了 str 类型。好像一个变量的值是什么并不能直接看出来。

这两种分歧使用「显式类型」和「隐式类型」两个词来描述。也有情况下，隐式类型被称作「弱类型」、「动态类型」；相对的显式类型就被称作是「强类型」或者「静态类型」。

但是这些名词显然没有足够的能力来表达人们心中的感受。矛盾之一就是 C 的类型系统，有人也认为是弱的。因为 C 的所有类型仅仅只是一些二进制内存的解析方式。对于同一段内存，程序可以存在若干种截然不同的解析方法。虽然这种做法可能会被某些人认为是危险而不符合规范的，但是这确是大多数人正确使用 C 的唯一方法。
